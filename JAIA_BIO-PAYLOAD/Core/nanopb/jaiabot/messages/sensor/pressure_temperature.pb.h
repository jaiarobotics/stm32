/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.5 */

#ifndef PB_JAIABOT_PROTOBUF_NANOPB_JAIABOT_MESSAGES_SENSOR_PRESSURE_TEMPERATURE_PB_H_INCLUDED
#define PB_JAIABOT_PROTOBUF_NANOPB_JAIABOT_MESSAGES_SENSOR_PRESSURE_TEMPERATURE_PB_H_INCLUDED
#include <pb.h>
#include "dccl/option_extensions.pb.h"

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Enum definitions */
typedef enum _jaiabot_protobuf_PressureSensorType { 
    jaiabot_protobuf_PressureSensorType_BAR02 = 1, 
    jaiabot_protobuf_PressureSensorType_BAR30 = 2 
} jaiabot_protobuf_PressureSensorType;

/* Struct definitions */
typedef struct _jaiabot_protobuf_PressureAdjustedData { 
    double pressure_raw; 
    bool has_pressure_adjusted;
    double pressure_adjusted; 
    bool has_pressure_raw_before_dive;
    double pressure_raw_before_dive; 
    bool has_calculated_depth;
    double calculated_depth; 
} jaiabot_protobuf_PressureAdjustedData;

typedef struct _jaiabot_protobuf_PressureTemperatureData { 
    double pressure_raw; 
    bool has_temperature;
    double temperature; 
    jaiabot_protobuf_PressureSensorType sensor_type; 
} jaiabot_protobuf_PressureTemperatureData;


/* Helper constants for enums */
#define _jaiabot_protobuf_PressureSensorType_MIN jaiabot_protobuf_PressureSensorType_BAR02
#define _jaiabot_protobuf_PressureSensorType_MAX jaiabot_protobuf_PressureSensorType_BAR30
#define _jaiabot_protobuf_PressureSensorType_ARRAYSIZE ((jaiabot_protobuf_PressureSensorType)(jaiabot_protobuf_PressureSensorType_BAR30+1))


#ifdef __cplusplus
extern "C" {
#endif

/* Initializer values for message structs */
#define jaiabot_protobuf_PressureTemperatureData_init_default {0, false, 0, _jaiabot_protobuf_PressureSensorType_MIN}
#define jaiabot_protobuf_PressureAdjustedData_init_default {0, false, 0, false, 0, false, 0}
#define jaiabot_protobuf_PressureTemperatureData_init_zero {0, false, 0, _jaiabot_protobuf_PressureSensorType_MIN}
#define jaiabot_protobuf_PressureAdjustedData_init_zero {0, false, 0, false, 0, false, 0}

/* Field tags (for use in manual encoding/decoding) */
#define jaiabot_protobuf_PressureAdjustedData_pressure_raw_tag 1
#define jaiabot_protobuf_PressureAdjustedData_pressure_adjusted_tag 2
#define jaiabot_protobuf_PressureAdjustedData_pressure_raw_before_dive_tag 3
#define jaiabot_protobuf_PressureAdjustedData_calculated_depth_tag 11
#define jaiabot_protobuf_PressureTemperatureData_pressure_raw_tag 1
#define jaiabot_protobuf_PressureTemperatureData_temperature_tag 2
#define jaiabot_protobuf_PressureTemperatureData_sensor_type_tag 3

/* Struct field encoding specification for nanopb */
#define jaiabot_protobuf_PressureTemperatureData_FIELDLIST(X, a) \
X(a, STATIC,   REQUIRED, DOUBLE,   pressure_raw,      1) \
X(a, STATIC,   OPTIONAL, DOUBLE,   temperature,       2) \
X(a, STATIC,   REQUIRED, UENUM,    sensor_type,       3)
#define jaiabot_protobuf_PressureTemperatureData_CALLBACK NULL
#define jaiabot_protobuf_PressureTemperatureData_DEFAULT (const pb_byte_t*)"\x18\x01\x00"

#define jaiabot_protobuf_PressureAdjustedData_FIELDLIST(X, a) \
X(a, STATIC,   REQUIRED, DOUBLE,   pressure_raw,      1) \
X(a, STATIC,   OPTIONAL, DOUBLE,   pressure_adjusted,   2) \
X(a, STATIC,   OPTIONAL, DOUBLE,   pressure_raw_before_dive,   3) \
X(a, STATIC,   OPTIONAL, DOUBLE,   calculated_depth,  11)
#define jaiabot_protobuf_PressureAdjustedData_CALLBACK NULL
#define jaiabot_protobuf_PressureAdjustedData_DEFAULT NULL

extern const pb_msgdesc_t jaiabot_protobuf_PressureTemperatureData_msg;
extern const pb_msgdesc_t jaiabot_protobuf_PressureAdjustedData_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define jaiabot_protobuf_PressureTemperatureData_fields &jaiabot_protobuf_PressureTemperatureData_msg
#define jaiabot_protobuf_PressureAdjustedData_fields &jaiabot_protobuf_PressureAdjustedData_msg

/* Maximum encoded size of messages (where known) */
#define jaiabot_protobuf_PressureAdjustedData_size 36
#define jaiabot_protobuf_PressureTemperatureData_size 20

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
