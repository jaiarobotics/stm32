syntax = "proto2";

import "dccl/option_extensions.proto";
import "jaiabot/messages/sensor/metadata.proto";
import "jaiabot/messages/sensor/configuration.proto";
import "jaiabot/messages/sensor/atlas_scientific__oem_ec.proto";
import "jaiabot/messages/sensor/atlas_scientific__oem_do.proto";
import "jaiabot/messages/sensor/atlas_scientific__oem_ph.proto";
import "jaiabot/messages/sensor/turner__c_fluor.proto";
import "jaiabot/messages/sensor/blue_robotics__bar30.proto";
import "jaiabot/messages/sensor/catalog.proto";

package jaiabot.sensor.protobuf;

enum MCUCommand
{
    ENTER_BOOTLOADER_MODE = 1;
}

enum CalibrationType
{
    START_EC_CALIBRATION = 1;
    CALIBRATE_EC_DRY = 2;
    CALIBRATE_EC_LOW = 3;
    CALIBRATE_EC_HIGH = 4;
    START_DO_CALIBRATION = 5;
    CALIBRATE_DO_LOW = 6;
    CALIBRATE_DO_HIGH = 7;
    START_PH_CALIBRATION = 8;
    CALIBRATE_PH_LOW = 9;
    CALIBRATE_PH_MID = 10;
    CALIBRATE_PH_HIGH = 11;
    STOP_CALIBRATION = 12; 
}

message SensorRequest
{
    option (dccl.msg) = {
        unit_system: "si"
    };

    required uint64 time = 1 [
        (dccl.field) = { units { prefix: "micro" derived_dimensions: "time" } }
    ];

    oneof request_data
    {
        bool request_metadata = 11;
        Configuration cfg = 12;

        // change name to VendorSensor format
        //  EchoCommand echo_command = 13;
    }

    optional MCUCommand mcu_command = 20;
    optional CalibrationType calibration_type = 21;
}

message SensorData
{
    option (dccl.msg) = {
        unit_system: "si"
    };

    required uint64 time = 1 [
        (dccl.field) = { units { prefix: "micro" derived_dimensions: "time" } }
    ];

    oneof data
    {
        Metadata metadata = 11;
        AtlasScientificOEMEC oem_ec = 12;
        BlueRoboticsBar30 bar30 = 13;
        AtlasScientificOEMpH oem_ph = 14;
        AtlasScientificOEMDO oem_do = 15;
        TurnerCFluor c_fluor = 16;
        
        // change name to VendorSensor format
        // EchoData echo_data = 17;
    }
}

message SensorThreadConfig
{
    optional Metadata metadata = 1;
    optional int32 sample_rate = 2;
}
